
let put  = io.put
let puts = io.puts

io.puts( "Hello, world!" )

let fib = fn( n ) {
    let impl = fn( a, b, c ) {
        if( c > 0 ) {
            impl( b, a + b, c - 1 )
        } else {
            a
        }
    }
    impl( 0, 1, n )
}

let fib_rec = fn(x) {
    if (x == 0) {
        0
    } elif ( x == 1 ) {
        1
    } else {
        fib_rec(x - 1) + fib_rec(x - 2);
    }
};

let show_array = fn( arr ) {
    let impl = fn( arr, id ) {
        if( id == (len(arr) - 1) ) {
            io.put( arr[id] )
        } elif( id < len(arr) ) {
            io.put( arr[id], ", " )
            impl( arr, id + 1 )
        }
    }
    io.put( "["     )
    impl( arr, 0 )
    io.put( "]\n"   )
}

let reverse = fn( arr ) {
    let impl = fn( arr, id ) {
        if( id < len(arr) / 2 ) {
            // swap
            var tmp      = arr[id]
            arr[id]      = arr[-id - 1]
            arr[-id - 1] = tmp
            impl( arr, id + 1 )
        } else {
            arr
        }
    }
    impl( arr, 0 )
}

io.puts( "fib(20)     = ", 20 | fib     )
io.puts( "fib_rec(20) = ", 20 | fib_rec )

var arr = [1,2,3,4,5,6,7]

io.put("Array:   ") show_array( arr )
io.put("Reverse: ") show_array( reverse( mut arr ) )

let unless = macro(condition, consequence, alternative) {
    io.puts("Here the macro inlined!")
    if(!(unquote(condition))) {
        unquote(consequence);
    } else {
        unquote(alternative);
    };
}
unless(10 > 5, io.puts("not greater"), io.puts("greater"))

let bits = fn( value ) {
    let impl = fn( val, acc ) {
        if( val > 0 ) {
            impl( val >> 1, acc + (val & 1) )
        } else {
            acc
        }
    }
    impl( value, 0 )
}
bits(0xfffffffff) | io.puts              // => 36
bits(0b1111111000000001111111) | io.puts // => 14
